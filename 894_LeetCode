class Solution {
    private List<TreeNode>helper(int n)
    {
        if(n==1)
        {
            ArrayList<TreeNode>ans=new ArrayList<>();
            ans.add(new TreeNode(0));
            return ans;
        }
        List<TreeNode>res=new ArrayList<>();
        for(int i=1;i<n;i=i+2)
        {
        List<TreeNode>left=helper(i);
        List<TreeNode>right=helper(n-i-1);
            for(TreeNode l:left)
            {
                for(TreeNode r:right)
                {
                    TreeNode root=new TreeNode(0);
                    root.left=l;
                    root.right=r;
                    res.add(root);
                    
                }
            }
        }
        return res;
        
    }
    public List<TreeNode> allPossibleFBT(int n) {
    return  helper(n);   
    }
}
