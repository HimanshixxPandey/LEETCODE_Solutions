

class Solution
{
   
    //Function to find whether a path exists from the source to destination.
    public boolean is_Possible(int[][] grid)
    {
        // Code here
        
        int n=grid.length;
        int m=grid[0].length;
        boolean[][] vis=new boolean[n][m];
       for(int i=0;i<n;i++){
           for(int j=0;j<m;j++){
               if(grid[i][j] == 1 && vis[i][j] == false){
                   if(dfs(i,j,grid,vis)){
                       return true;
                   }
               }
           }
       }
       return false;
    }
   public boolean dfs(int i,int j,int[][] grid,boolean[][] vis){
       int[] row={-1,0,+1,0};
       int[] col={0,+1,0,-1};
       if(grid[i][j] == 2){
           return true;
       }
       vis[i][j]=true;
       for(int k=0;k<4;k++){
           int x=i+row[k];
           int y=j+col[k];
           if(x >=0 && x < grid.length && y >=0 && y < grid[0].length && vis[x][y] == false && grid[x][y] != 0){
               if(dfs(x,y,grid,vis)){
                   return true;
               }
           }
       }
       vis[i][j]=false;
       return false;
   }
}
